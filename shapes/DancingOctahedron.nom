
###  DancingOctahedron
# Inspired by:   https://www.deviantart.com/dansmath/art/squirming-dodecahedron-743745137
# All vertices move on small circles around vertex normals.
# The connecting edges stretch to adjust.

# CHS 2020/11/18
##############################################################

#  NOME3_file.nom   ## ... in the future this will be required

##############  BEGIN_STUFF.nom  #############################

surface M  color  (0.9 0   1  ) endsurface   # Magenta
surface Z  color  (1   0   0.6) endsurface   # Zinnober
surface R  color  (1   0.1 0  ) endsurface   # Red
surface O  color  (1   0.6 0  ) endsurface   # Orange
surface Y  color  (1   1   0  ) endsurface   # Yellow
surface L  color  (0.5 1   0  ) endsurface   # Lime
surface G  color  (0   0.9 0  ) endsurface   # Green
surface A  color  (0   0.9 0.7) endsurface   # Aqua
surface C  color  (0   1   1  ) endsurface   # Cyan
surface U  color  (0   0.6 1  ) endsurface   # Uniform
surface B  color  (0   0.3 1  ) endsurface   # Blue
surface V  color  (0.3 0   1  ) endsurface   # Violet
surface P  color  (0.6 0   1  ) endsurface   # Purple

surface W  color  (1   1   1  ) endsurface   # White
surface S  color  (0.7 0.7 0.7) endsurface   # Snow
surface D  color  (0.4 0.4 0.4) endsurface   # Dark
surface K  color  (0   0   0  ) endsurface   # blacK

################  Coordinate axes  ###################

point ooo  ( 0 0 0 ) endpoint 
point xoo  ( 1 0 0 ) endpoint
point oyo  ( 0 1 0 ) endpoint
point ooz  ( 0 0 1 ) endpoint

polyline xaxis (ooo xoo) endpolyline
polyline yaxis (ooo oyo) endpolyline
polyline zaxis (ooo ooz) endpolyline

group coord_axes
  instance ix xaxis surface R endinstance
  instance iy yaxis surface U endinstance
  instance iz zaxis surface G endinstance
endgroup

# instance axes coord_axes  endinstance  #  if desired in display.

##############  end of  "BEGIN_STUFF.nom"  #######################

# This can then be included with:
# include "BEGIN_STUFF.nom"


########################  The project-specific stuff  ###################################################

########################  parameters  ###################################################################

bank par
    set     ampli     0.2      0       1       0.01   ## radius od the small vertex orbits
    set     speed     0.02     0.001   0.1     0.001  ## ... in fraction of radians per subsequent frame
    set     phasX     1.571   -3.1415  3.1415  0.1    ## phase shift of +/- X-vertices with respect to Z
    set     phasY     1.571   -3.1415  3.1415  0.1    ## phase shift of +/- Y-vertices with respect to Z
    set     frame     0        0      1000     1      ## manual control, stepping thru consecutive frames
endbank

# In an automatic, time-varying setting, all occurrences of "$par.frame" will be replaced by $frame

#######################  the octahedron  ###########################################################################

point zp  ( {expr $par.ampli*sin($par.speed*$par.frame)}  {expr  $par.ampli*cos($par.speed*$par.frame)}   1 ) endpoint 
point zn  ( {expr $par.ampli*sin($par.speed*$par.frame)}  {expr -$par.ampli*cos($par.speed*$par.frame)}  -1 ) endpoint 

point xp  (  1  {expr $par.ampli*sin($par.speed*$par.frame +$par.phasX)}  {expr  $par.ampli*cos($par.speed*$par.frame +$par.phasX)} ) endpoint 
point xn  ( -1  {expr $par.ampli*sin($par.speed*$par.frame +$par.phasX)}  {expr -$par.ampli*cos($par.speed*$par.frame +$par.phasX)} ) endpoint 

point yp  ( {expr $par.ampli*sin($par.speed*$par.frame +$par.phasY)}   1  {expr  $par.ampli*cos($par.speed*$par.frame +$par.phasY)} ) endpoint 
point yn  ( {expr $par.ampli*sin($par.speed*$par.frame +$par.phasY)}  -1  {expr -$par.ampli*cos($par.speed*$par.frame +$par.phasY)} ) endpoint 

polyline  plineX (yp zp yn zn yp)  endpolyline 
polyline  plineY (xp zp xn zn xp)  endpolyline 
polyline  plineZ (xp yp xn yn xp)  endpolyline 

group assembly
    instance ipx  plineX  endinstance
    instance ipy  plineY  endinstance
    instance ipz  plineZ  endinstance
endgroup

instance Dancing_Octa  assembly  surface O  endinstance


###################  "RENDER_STUFF.nom"  #########################################

##  ... once we have some standard light and camera specifications, 
##  this information could also be placed into an include-file: "RENDER_STUFF.nom"

###########  end of  "RENDER_STUFF.nom"  #########################################



